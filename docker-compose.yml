services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - db_data:/var/lib/postgresql/data

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    command: ["sh", "-lc", "pnpm install --frozen-lockfile && pnpm exec prisma generate && pnpm start:dev"]
    ports:
      - "3000:3000"
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules



  studio:
    image: node:20-alpine
    working_dir: /usr/src/app
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      NODE_ENV: development  
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
  # Instala deps (incluye prisma), y levanta Studio escuchando en 0.0.0.0
    command: ["sh", "-lc", "corepack enable && pnpm install --frozen-lockfile && pnpm exec prisma studio --port 5555 --hostname 0.0.0.0 --browser none"]
    ports:
      - "5555:5555"


volumes:
  db_data:
